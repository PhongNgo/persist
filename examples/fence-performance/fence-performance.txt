Motivation: these tests compare the correct programs of Persist, Trencher, and Musketeer.
All tools find a set of fences to guarantee the SC behaviours of programs.
But better fences can let to better performance of programs.

Method:
We run corrected programs in N times, then calculate the running time in a same machine.

Command:
gcc filename.c -o filename
time ./filename


Explain: 
N: number of rounds in testing
LoC: line of codes in original source code file
F-P: Fences of Persist
F-T: Fences of Trencher
F-M: Fences of Musketeer
T-P: Running with Persist (seconds)
T-M: Running with Musketeer (seconds)
T-T: Running with Trencher (seconds)
%-T-2-P: Percentage of the Trencher corrected program comparing with Persist one (Trencher/Persist)
%-M-2-P: Percentage of the Musketeer corrected program comparing with Persist one (Musketeer/Persist)

Symbol “-” means that the tool does not return the result.

Test	 	N	 	LoC	F-P	F-M	F-T	T-P	T-M	T-T	%-M-2-P		%-T-2-P	
Dekker2 	1000000000 	59	4	8	4	227	311	227	137%		100%
Bakery3		1000000000	100	4	12	-	578	1120	-	193%		-
Lamport2	100000000	81	8	15	4	31	43	22	138%		70%
Szymanski2	100000000	50	8	11	8	39	44	39	112%		100%
Nbw_w_wr	1000000000	52	0	6	1	28	153	39	546%		139%
r+detour	1000000000	74	0	3	3	172	337	337	195%		195%
r+detours	1000000000	75	0	3	3	97	275	275	283%		283%
sb+detours+coherence 1000000000 82	0	4	4	162	442	442	272%		272%
write+r		1000000000	74	0	4	4	123	420	420	341%		341%
write+r+coherence 1000000000	85	0	4	4	194	557	557	287%		287%
