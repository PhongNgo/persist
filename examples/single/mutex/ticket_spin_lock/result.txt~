Trencher 0 Persist

[root@localhost build]# ./PERSIST -b -f 2 ../examples/postgresql/ticket_spin_lock/ticket_spin_lock.txt
Computed fences for enforcing persistence (0 total):
*********************************************
 Thread number: 2
 State number: 20
 Transition number: 20
 PotentialAttackNum: 0
 InfeasibleAttackNum: 0
 InfeasibleAttackNum: 0
 FeasibleAttackNum: 0
 Fence number: 0
 SpinTime in miliseconds: 0
 CompilerTime in miliseconds: 0
 VerifierTime in miliseconds: 0
 SeqRealTime in miliseconds: 0
 RealTime in milisecond: 0
*********************************************
[root@localhost build]# ./trencher -b -f  ../examples/postgresql/ticket_spin_lock/ticket_spin_lock.txt
filename ../examples/postgresql/ticket_spin_lock/ticket_spin_lock.txt action 1 threadsCount 2 statesCount 20 transitionsCount 20 potentialAttacksCount 12 infeasibleAttacksCount1 12 infeasibleAttacksCount2 0 feasibleAttacksCount 0 fencesCount 0 spinTime 0 compilerTime 0 verifierTime 0 cpuTime 0 realTime 0


Musketeer 0

[root@localhost build]# ./goto-cc -o ../examples/postgresql/ticket_spin_lock/ticket.gb ../examples/postgresql/ticket_spin_lock/ticket_spin_lock.c
[root@localhost build]# ./musketeer --mm tso ../examples/postgresql/ticket_spin_lock/ticket.gb 
Reading GOTO program from ../examples/postgresql/ticket_spin_lock/ticket.gb
Adding CPROVER library
Partial Inlining
Function Pointer Removal
Pointer Analysis
Fence detection for tso via critical cycles and ILP
Adding weak memory (TSO) Instrumentation
--------
Temporary variables added
Dependencies analysis enabled
Number of threads detected: 2
Graph with 18 nodes has 1 interesting SCCs
Number of reads: 10
Number of writes: 6
Number of wse: 2
Number of rfe/fre: 6
Number of goto-instructions: 51
Abstract event graph computed

cycles collected: 0 cycles found
program safe -- no need to place additional fences


Memorax

0
[phong@localhost build]$ memorax fencins -a pb --cegar  ../examples/postgresql/tests/ticket_spin_lock/ticket_spin_lock.rmm
Found 1 synchronization set:
Totally 0 unique synchronizations:
Synchronization sets:
#0: {}
Total time to insert fences: 0.4 s


