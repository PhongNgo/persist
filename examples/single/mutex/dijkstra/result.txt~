Trencher 4


[phong@localhost build]$ ./trencher -b -f ../examples/postgresql/dijksrtra/dijkstra.txt
filename ../examples/postgresql/dijksrtra/dijkstra.txt action 1 threadsCount 2 statesCount 22 transitionsCount 28 potentialAttacksCount 148 infeasibleAttacksCount1 48 infeasibleAttacksCount2 38 feasibleAttacksCount 62 fencesCount 4 spinTime 2062 compilerTime 49635 verifierTime 3234 cpuTime 220 realTime 27916


Persist 4

[phong@localhost build]$ ./PERSIST -b -f 2 ../examples/postgresql/dijksrtra/dijkstra.txt
Computed fences for enforcing persistence (4 total): (t0,q8) (t0,q1) (t1,q8) (t1,q1)
*********************************************
 Thread number: 2
 State number: 22
 Transition number: 28
 PotentialAttackNum: 12
 InfeasibleAttackNum: 0
 InfeasibleAttackNum: 0
 FeasibleAttackNum: 0
 Fence number: 4
 SpinTime in miliseconds: 309
 CompilerTime in miliseconds: 7098
 VerifierTime in miliseconds: 401
 SeqRealTime in miliseconds: 7808
 RealTime in milisecond: 4080
*********************************************

Memorax 2

[phong@localhost build]$ memorax fencins -a pb --cegar ../examples/postgresql/dijksrtra/dijkstra.rmm
Found 1 synchronization set:
Totally 2 unique synchronizations:
A: Lock write: L27 P0: write: flag[P0] := 2

B: Lock write: L52 P1: write: flag[P1] := 2

Synchronization sets:
#0: {A, B}
Total time to insert fences: 1.6 s

Musketeer 8

[phong@localhost build]$ ./musketeer --mm tso ../examples/postgresql/dijksrtra/dijkstra.gb
Reading GOTO program from ../examples/postgresql/dijksrtra/dijkstra.gb
Adding CPROVER library
Partial Inlining
Function Pointer Removal
Pointer Analysis
Fence detection for tso via critical cycles and ILP
Adding weak memory (TSO) Instrumentation
--------
Temporary variables added
Dependencies analysis enabled
Number of threads detected: 2
Graph with 14 nodes has 1 interesting SCCs
Number of reads: 6
Number of writes: 8
Number of wse: 1
Number of rfe/fre: 14
Number of goto-instructions: 54
Abstract event graph computed

cycles collected: 30 cycles found
i: 1021 mat_size: 1020
Optimal solution found
minimal cost: 24
0 -> 1 : fence
(between file ../examples/postgresql/dijksrtra/dijkstra.c line 7 function thr0 and file ../examples/postgresql/dijksrtra/dijkstra.c line 8 function thr0
4 -> 5 : fence
(between file ../examples/postgresql/dijksrtra/dijkstra.c line 11 function thr0 and file ../examples/postgresql/dijksrtra/dijkstra.c line 12 function thr0
7 -> 8 : fence
(between file ../examples/postgresql/dijksrtra/dijkstra.c line 20 function thr1 and file ../examples/postgresql/dijksrtra/dijkstra.c line 21 function thr1
11 -> 12 : fence
(between file ../examples/postgresql/dijksrtra/dijkstra.c line 24 function thr1 and file ../examples/postgresql/dijksrtra/dijkstra.c line 25 function thr1
10 -> 8 : fence
(between file ../examples/postgresql/dijksrtra/dijkstra.c line 22 function thr1 and file ../examples/postgresql/dijksrtra/dijkstra.c line 21 function thr1
7 -> 9 : fence
(between file ../examples/postgresql/dijksrtra/dijkstra.c line 20 function thr1 and file ../examples/postgresql/dijksrtra/dijkstra.c line 22 function thr1
10 -> 12 : fence
(between file ../examples/postgresql/dijksrtra/dijkstra.c line 22 function thr1 and file ../examples/postgresql/dijksrtra/dijkstra.c line 25 function thr1
0 -> 2 : fence
(between file ../examples/postgresql/dijksrtra/dijkstra.c line 7 function thr0 and file ../examples/postgresql/dijksrtra/dijkstra.c line 9 function thr0
