#
# Peterson's mutex algorithm for 4 processes (Filter lock):
# http://en.wikipedia.org/wiki/Peterson%27s_algorithm#Filter_algorithm:_Peterson.27s_algorithm_for_N_processes
#
# // initialization
# level[N+1] = { 0 };     // current level of processes 1...N. Do not use level[0]
# waiting[N] = { 0 }; // the waiting process of each level 1...N-1
# 
# // code for process #i
# for(l = 1; l < N; ++l) {
#    level[i] = l;
#    waiting[l] = i;
#    while(waiting[l] == i &&
#          (there exists k ≠ i, such that level[k] ≥ l)) {
#        // busy wait
#    }
# }
# 
# // critical section
# level[i] = 0; // exit section
#
# Memory layout:
# 0,1,2,3,4 — level[0-4]
# 5,6,7 — waiting[1-3]

thread t1
initial q0
transition 	q0	q1	local	l 	1
transition	q1	q2	check	>= l 	4
transition	q1	q3	check	< l 4
transition 	q3	q4	write	l	1
transition 	q4	q5	write	1	+ 4 l
transition 	q5	q6	read	rwait	+ 4 l
transition	q6	q7	read	rlevel2	2
transition	q7	q8	read	rlevel3	3
transition	q8	q9	read	rlevel4	4
transition 	q9	q5	check	&& == rwait 1 || || >= rlevel2 l >= rlevel3 l >= rlevel4 l			
transition	q9	q10	check	|| != rwait 1 && && < rlevel2 l < rlevel3 l < rlevel4 l
transition 	q10	q1	local 	l 	+ 1 l

transition 	q2	q21	noop
transition	q21	q22	write	0	1
transition 	q22	q0	noop
end

thread t2
initial q0
transition 	q0	q1	local	l 	1
transition	q1	q2	check	>= l 	4
transition	q1	q3	check	< l 4
transition 	q3	q4	write	l	1
transition 	q4	q5	write	2	+ 4 l
transition 	q5	q6	read	rwait	+ 4 l
transition	q6	q7	read	rlevel1	1
transition	q7	q8	read	rlevel3	3
transition	q8	q9	read	rlevel4	4
transition 	q9	q5	check	&& == rwait 2 || || >= rlevel1 l >= rlevel3 l >= rlevel4 l			
transition	q9	q10	check	|| != rwait 2 && && < rlevel1 l < rlevel3 l < rlevel4 l
transition 	q10	q1	local 	l 	+ 1 l

transition 	q2	q21	noop
transition	q21	q22	write	0	2
transition 	q22	q0	noop
end


thread t3
initial q0
transition 	q0	q1	local	l 	1
transition	q1	q2	check	>= l 	4
transition	q1	q3	check	< l 4
transition 	q3	q4	write	l	1
transition 	q4	q5	write	3	+ 4 l
transition 	q5	q6	read	rwait	+ 4 l
transition	q6	q7	read	rlevel1	1
transition	q7	q8	read	rlevel2	2
transition	q8	q9	read	rlevel4	4
transition 	q9	q5	check	&& == rwait 3 || || >= rlevel1 l >= rlevel2 l >= rlevel4 l			
transition	q9	q10	check	|| != rwait 3 && && < rlevel1 l < rlevel2 l < rlevel4 l
transition 	q10	q1	local 	l 	+ 1 l

transition 	q2	q21	noop
transition	q21	q22	write	0	3
transition 	q22	q0	noop
end


thread t4
initial q0
transition 	q0	q1	local	l 	1
transition	q1	q2	check	>= l 	4
transition	q1	q3	check	< l 4
transition 	q3	q4	write	l	1
transition 	q4	q5	write	4	+ 4 l
transition 	q5	q6	read	rwait	+ 4 l
transition	q6	q7	read	rlevel1	1
transition	q7	q8	read	rlevel2	2
transition	q8	q9	read	rlevel3	3
transition 	q9	q5	check	&& == rwait 4 || || >= rlevel1 l >= rlevel2 l >= rlevel3 l			
transition	q9	q10	check	|| != rwait 4 && && < rlevel1 l < rlevel2 l < rlevel3 l
transition 	q10	q1	local 	l 	+ 1 l

transition 	q2	q21	noop
transition	q21	q22	write	0	4
transition 	q22	q0	noop
end

