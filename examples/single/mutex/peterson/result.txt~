Trencher 2 
[phong@localhost build]$ ./trencher -b -f ../examples/postgresql/peterson/peterson.txt
filename ../examples/postgresql/peterson/peterson.txt action 1 threadsCount 2 statesCount 16 transitionsCount 20 potentialAttacksCount 22 infeasibleAttacksCount1 2 infeasibleAttacksCount2 12 feasibleAttacksCount 8 fencesCount 2 spinTime 688 compilerTime 10466 verifierTime 695 cpuTime 30 realTime 6219


Persist 2
[phong@localhost build]$ ./PERSIST -b -f 2 ../examples/postgresql/peterson/peterson.txt
Computed fences for enforcing persistence (2 total): (t0,q2) (t1,q2)
*********************************************
 Thread number: 2
 State number: 16
 Transition number: 20
 PotentialAttackNum: 8
 InfeasibleAttackNum: 0
 InfeasibleAttackNum: 0
 FeasibleAttackNum: 0
 Fence number: 2
 SpinTime in miliseconds: 235
 CompilerTime in miliseconds: 3754
 VerifierTime in miliseconds: 252
 SeqRealTime in miliseconds: 4241
 RealTime in milisecond: 2220
*********************************************

Memorax 2

[phong@localhost build]$ memorax fencins -a pb --cegar ../examples/postgresql/peterson/peterson.rmm 
Found 1 synchronization set:
Totally 2 unique synchronizations:
A: Lock write: L17 P0: write: turn := 1

B: Lock write: L33 P1: write: turn := 0

Synchronization sets:
#0: {A, B}
Total time to insert fences: 7.5 s

[phong@localhost build]$ memorax fencins -a sb  ../examples/postgresql/peterson/peterson.rmm 
Found 1 synchronization set:
Totally 2 unique synchronizations:
A: Lock write: L17 P0: write: turn := 1

B: Lock write: L33 P1: write: turn := 0

Synchronization sets:
#0: {A, B}
Total time to insert fences: 1.3 s


Musketeer

[phong@localhost build]$ ./goto-cc -o ../examples/postgresql/peterson/peterson.gb ../examples/postgresql/peterson/peterson.c
[phong@localhost build]$ ./musketeer --mm tso ../examples/postgresql/peterson/peterson.gb 
Reading GOTO program from ../examples/postgresql/peterson/peterson.gb
Adding CPROVER library
Partial Inlining
Function Pointer Removal
Pointer Analysis
Fence detection for tso via critical cycles and ILP
Adding weak memory (TSO) Instrumentation
--------
Temporary variables added
Dependencies analysis enabled
Number of threads detected: 2
Graph with 10 nodes has 1 interesting SCCs
Number of reads: 4
Number of writes: 6
Number of wse: 1
Number of rfe/fre: 6
Number of goto-instructions: 42
Abstract event graph computed

cycles collected: 19 cycles found
i: 397 mat_size: 396
Optimal solution found
minimal cost: 12
1 -> 3 : fence
(between file ../examples/postgresql/peterson/peterson.c line 9 function thr1 and file ../examples/postgresql/peterson/peterson.c line 14 function thr1
6 -> 8 : fence
(between file ../examples/postgresql/peterson/peterson.c line 23 function thr2 and file ../examples/postgresql/peterson/peterson.c line 28 function thr2
5 -> 7 : fence
(between file ../examples/postgresql/peterson/peterson.c line 22 function thr2 and file ../examples/postgresql/peterson/peterson.c line 28 function thr2
0 -> 2 : fence
(between file ../examples/postgresql/peterson/peterson.c line 8 function thr1 and file ../examples/postgresql/peterson/peterson.c line 14 function thr1

