/* Lamport's bakery algorithm for two processes */

forbidden
  CS CS


process
data
  c = 0 : [0:1]
  n = 0 : [0:2]
registers
  $c = * : [0:1]
  $r0 = * : [0:10]
  $r1 = * : [0:10]
text
  L0: write: c[my] := 1;
  read: $r0 := n[0];
  $r1 := $r0 + 1;
  write: n[my] := $r1;
  write: c[my] := 0;
L2:  read: $c := c[0];
  if $c != 0 then
     goto L2;
L1: read: $r0 := n[0];
  if $r0 != 0 && [$r0 < $r1 || $r0 = $r1]  then
    goto L1;
  CS: nop;
  write: n[my] := 0;
  goto L0




process
data
  c = 0 : [0:1]
  n = 0 : [0:10]
registers
  $c = * : [0:1]
  $r0 = * : [0:10]
  $r1 = * : [0:10]
text
  L0: write: c[my] := 1;
  read: $r0 := n[0];
  $r1 := $r0 + 1;
  write: n[my] := $r1;
  write: c[my] := 0;
 L2:  read: $c := c[0];
  if $c != 0 then
     goto L2;
  L1: read: $r0 := n[0];
  if $r0 != 0 && [$r0 < $r1 || $r0 = $r1] then
    goto L1;
  CS: nop;  
  write: n[my] := 0;
  goto L0
