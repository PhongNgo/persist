int flag0 = 0;
int flag1 = 0;
int flag2 = 0;
int flag3 = 0;

proctype P0 {
int lflag1;
int lflag2;
int lflag3;

do
:: true ->
	store(flag0,1);

	lflag1 = loadval(flag1);
	lflag2 = loadval(flag2);
	lflag3 = loadval(flag3);
	do
	:: (lflag1 == 1 || lflag1 == 2 || lflag1 == 0) && (lflag2 == 1 || lflag2 == 2 || lflag2 == 0) && (lflag3 == 1 || lflag3 == 2 || lflag3 == 0) -> break;
	:: lflag1 == 3 || lflag1 == 4 || lflag2 == 3 || lflag2 == 4 || lflag3 == 3 || lflag3 == 4  -> lflag1 = loadval(flag1);
		lflag2 = loadval(flag2);
		lflag3 = loadval(flag3);
		skip;
	od;
	
	store(flag0,3);
	
	lflag1 = loadval(flag1);
	lflag2 = loadval(flag2);
	lflag3 = loadval(flag3);
	if
	:: lflag1 == 1 || lflag2 == 1 || lflag3 == 1 -> store(flag0,2);
		lflag1 = loadval(flag1);
		lflag2 = loadval(flag2);
		lflag3 = loadval(flag3);		
		do
		:: lflag1 == 4 || lflag2 == 4 || lflag3 == 4  -> break;
		:: lflag1 != 4 && lflag2 != 4 && lflag3 != 4  -> 
			lflag1 = loadval(flag1);
			lflag2 = loadval(flag2);
			lflag3 = loadval(flag3);			
			skip;
		od;
	:: lflag1 != 1 && lflag2 != 1 && lflag3 != 1 -> skip;
	fi;
	
	store(flag0,4);
	
	lflag1 = loadval(flag1);
	lflag2 = loadval(flag2);
	lflag3 = loadval(flag3);

	do
	:: (lflag1 == 0 || lflag1 == 1 || lflag1 == 4) && (lflag2 == 0 || lflag2 == 1 || lflag2 == 4) && (lflag3 == 0 || lflag3 == 1 || lflag3 == 4) -> break;
	:: (lflag1 != 0 && lflag1 != 1 && lflag1 != 4) || (lflag2 != 0 && lflag2 != 1  && lflag2 != 4) || (lflag3 != 0 && lflag3 != 1  && lflag3 != 4) -> skip;
	od;
	
	store(flag0,0);
od;
}

proctype P1 {
int lflag0;
int lflag2;
int lflag3;

do
:: true ->
	store(flag1,1);

	lflag0 = loadval(flag0);
	lflag2 = loadval(flag2);
	lflag3 = loadval(flag3);
	do
	:: (lflag0 == 1 || lflag0 == 2 || lflag0 == 0) && (lflag2 == 1 || lflag2 == 2 || lflag2 == 0) && (lflag3 == 1 || lflag3 == 2 || lflag3 == 0) -> break;
	:: lflag0 == 3 || lflag0 == 4 || lflag2 == 3 || lflag2 == 4 || lflag3 == 3 || lflag3 == 4  -> lflag0 = loadval(flag0);
		lflag2 = loadval(flag2);
		lflag3 = loadval(flag3);
		skip;
	od;
	
	store(flag1,3);
	
	lflag0 = loadval(flag0);
	lflag2 = loadval(flag2);
	lflag3 = loadval(flag3);
	if
	:: lflag0 == 1 || lflag2 == 1 || lflag3 == 1 -> store(flag1,2);
		lflag0 = loadval(flag0);
		lflag2 = loadval(flag2);
		lflag3 = loadval(flag3);		
		do
		:: lflag0 == 4 || lflag2 == 4 || lflag3 == 4  -> break;
		:: lflag0 != 4 && lflag2 != 4 && lflag3 != 4  -> 
			lflag0 = loadval(flag0);
			lflag2 = loadval(flag2);
			lflag3 = loadval(flag3);			
			skip;
		od;
	:: lflag0 != 1 && lflag2 != 1 && lflag3 != 1 -> skip;
	fi;
	
	store(flag1,4);
	
	lflag0 = loadval(flag0);
	do
	:: lflag0 == 0 || lflag0 == 1 -> break;
        :: lflag0 !=0 && lflag0 != 1 -> skip;
	od;

	lflag2 = loadval(flag2);
	lflag3 = loadval(flag3);
 
	do
	:: (lflag2 == 0 || lflag2 == 1 || lflag2 == 4) && (lflag3 == 0 || lflag3 == 1 || lflag3 == 4)-> break;
	:: (lflag2 != 0 && lflag2 != 1 && lflag2 != 4) || (lflag3 != 0 && lflag3 != 1 && lflag3 != 4) -> skip;
	od;
	
	store(flag1,0);
od;
}



proctype P2 {
int lflag0;
int lflag1;
int lflag3;

do
:: true ->
	store(flag2,1);

	lflag0 = loadval(flag0);
	lflag1 = loadval(flag1);
	lflag3 = loadval(flag3);
	do
	:: (lflag0 == 1 || lflag0 == 2 || lflag0 == 0) && (lflag1 == 1 || lflag1 == 2 || lflag1 == 0) && (lflag3 == 1 || lflag3 == 2 || lflag3 == 0) -> break;
	:: lflag0 == 3 || lflag0 == 4 || lflag1 == 3 || lflag1 == 4 || lflag3 == 3 || lflag3 == 4  -> lflag0 = loadval(flag0);
		lflag1 = loadval(flag1);
		lflag3 = loadval(flag3);
		skip;
	od;
	
	store(flag2,3);
	
	lflag0 = loadval(flag0);
	lflag1 = loadval(flag1);
	lflag3 = loadval(flag3);
	if
	:: lflag0 == 1 || lflag1 == 1 || lflag3 == 1 -> store(flag2,2);
		lflag0 = loadval(flag0);
		lflag1 = loadval(flag1);
		lflag3 = loadval(flag3);		
		do
		:: lflag0 == 4 || lflag1 == 4 || lflag3 == 4  -> break;
		:: lflag0 != 4 && lflag1 != 4 && lflag3 != 4  -> 
			lflag0 = loadval(flag0);
			lflag1 = loadval(flag1);
			lflag3 = loadval(flag3);			
			skip;
		od;
	:: lflag0 != 1 && lflag1 != 1 && lflag3 != 1 -> skip;
	fi;
	
	store(flag2,4);
	
	lflag0 = loadval(flag0);
	lflag1 = loadval(flag1);

	do
	:: (lflag0 == 0 || lflag0 == 1) && (lflag1 == 0 || lflag1 == 1) -> break;
        :: (lflag0 !=0 && lflag0 != 1) || (lflag1 !=0 && lflag1 != 1)-> skip;
	od;
	
	lflag3 = loadval(flag3);
 
	do
	::  lflag3 == 0 || lflag3 == 1 || lflag3 == 4-> break;
	:: lflag3 != 0 && lflag3 != 1 && lflag3 != 4 -> skip;
	od;

	store(flag2,0);
od;
}


proctype P3 {
int lflag0;
int lflag1;
int lflag2;

do
:: true ->
	store(flag3,1);

	lflag0 = loadval(flag0);
	lflag1 = loadval(flag1);
	lflag2 = loadval(flag2);
	do
	:: (lflag0 == 1 || lflag0 == 2 || lflag0 == 0) && (lflag1 == 1 || lflag1 == 2 || lflag1 == 0) && (lflag2 == 1 || lflag2 == 2 || lflag2 == 0) -> break;
	:: lflag0 == 3 || lflag0 == 4 || lflag1 == 3 || lflag1 == 4 || lflag2 == 3 || lflag2 == 4  -> lflag0 = loadval(flag0);
		lflag1 = loadval(flag1);
		lflag2 = loadval(flag2);
		skip;
	od;
	
	store(flag3,3);
	
	lflag0 = loadval(flag0);
	lflag1 = loadval(flag1);
	lflag2 = loadval(flag2);
	if
	:: lflag0 == 1 || lflag1 == 1 || lflag2 == 1 -> store(flag3,2);
		lflag0 = loadval(flag0);
		lflag1 = loadval(flag1);
		lflag2 = loadval(flag2);		
		do
		:: lflag0 == 4 || lflag1 == 4 || lflag2 == 4  -> break;
		:: lflag0 != 4 && lflag1 != 4 && lflag2 != 4  -> 
			lflag0 = loadval(flag0);
			lflag1 = loadval(flag1);
			lflag2 = loadval(flag2);			
			skip;
		od;
	:: lflag0 != 1 && lflag1 != 1 && lflag2 != 1 -> skip;
	fi;
	
	store(flag3,4);
	
	
	lflag0 = loadval(flag0);
	lflag1 = loadval(flag1);
        lflag2 = loadval(flag2);

	do
	:: (lflag0 == 0 || lflag0 == 1) && (lflag1 == 0 || lflag1 == 1) && (lflag2 == 0 || lflag2 == 1) -> break;
        :: (lflag0 !=0 && lflag0 != 1) || (lflag1 !=0 && lflag1 != 1) || (lflag2 !=0 && lflag2 != 1)-> skip;
	od;
	
	store(flag3,0);
od;
}
