#
# Dekker's mutex algorithm:
#
# while true
#     flag[i] = 1
#     load  _flag = 
#  
#    // critical section
#    ...
# q9:   turn    = 1;
# q10:   flag[0] = false;
#    // remainder section
#   }
#
# Memory layout:
# 0 — flag[0]
# 1 — flag[1]
# 2 — turn

# Trencher = Persist = 4, Musketeer = 3 or 5?

thread t0
initial q0

transition q0	q1	write	1	0

transition q1	q2	read	flag	1
transition q2	q3	check	== flag 1
transition q2	q9	check	== flag 0

transition q3	q4	read	turn	2

transition q4	q5	check	!= turn 0
transition q4	q8	check	== turn 0

transition q5	q6	write	0	0

transition q6	q7	check	!= turn 0
transition q7 	q6	read	turn 	2
transition q6	q0	check	== turn 0

transition q8	q2	read	flag	1

transition q9	q10	write	1	2
transition q10	q0	write	0	0

end

# Thread t1 is symmetric.

thread t1
initial q0

transition q0	q1	write	1	1

transition q1	q2	read	flag	0
transition q2	q3	check	== flag 1
transition q2	q9	check	== flag 0

transition q3	q4	read	turn	2

transition q4	q5	check	!= turn 1
transition q4	q8	check	== turn 1

transition q5	q6	write	0	1

transition q6	q7	check	!= turn 1
transition q7 	q6	read	turn 	2
transition q6	q0	check	== turn 1

transition q8	q2	read	flag	0

transition q9	q10	write	0	2
transition q10	q0	write	0	1

end
