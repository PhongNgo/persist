/*
# x - 0
# y - 1
# z - 2
#
# T1: x=1; z=3; Rx <- x = 1
# T2: x=1; Ry <-y = 0
# T3: y=0, z=2;
# T4: y=0
# error state: x=1; y=0; z=3, Rx=1; Ry=0
#
# Cycles for happened-before relations:
# isu&update(y=0,t4), isu&update(x=1,t1), isu(z=3), Rx=x, isu&update(x=1,t2), Ry=y, isu&update(y=0,t3), isu&update(z=2), update(z=3)
#
# isu&update(y=0,t4), isu(x=1,t2), Ry=y, isu&update(y=0,t3), isu&update(z=2), isu&update(x=1,t1), isu&update(z=3), Rx=x, update(x=1,t2)
 */

forbidden
  L2 L2 L2 L2
data
  x = 0 : [0:3]
  y = 0 : [0:3]
  z = 0 : [0:3]

process(1)
registers
  $rx = * : [0:3]
  $rx1 = * : [0:3]
  $ry = * : [0:3]
  $rz = * : [0:3]
	
text
  L0: write: x := 1;
  write: z := 3; 
  L1:  read: $rx := x;
  if $rx != 1 then {
      goto L1
  };
  read: $rx1 := x;
  read: $ry := y;
  read: $rz := z;
  if $rx = 1 && $rx1 = 1 && $ry = 0 && $rz = 3 then {
	L2: nop
  };

  goto L0

process(1)
registers
  $rx = * : [0:3]
  $rx1 = * : [0:3]
  $ry = * : [0:3]
  $rz = * : [0:3]
	
text
  L0: write: x := 1;
  write: z := 3; 
  L1:  read: $rx := x;
  if $rx != 1 then {
      goto L1
  };
  read: $rx1 := x;
  read: $ry := y;
  read: $rz := z;
  if $rx = 1 && $rx1 = 1 && $ry = 0 && $rz = 3 then {
	L2: nop
  };

  goto L0


process(1)
registers
  $rx = * : [0:3]
  $ry = * : [0:3]
  $ry1 = * : [0:3]
  $rz = * : [0:3]
text
  L0: write: x := 1;
  L1:  read: $ry := y;
  if $ry != 0 then {
      goto L1
  };
  read: $rx := x;
  read: $ry1 := y;
  read: $rz := z;
  if $rx = 1 && $ry = 0 && $ry1 = 0 && $rz = 3 then {
	L2: nop
  };
   goto L0

process(1)
registers
  $rx = * : [0:3]
  $ry = * : [0:3]
  $ry1 = * : [0:3]
  $rz = * : [0:3]
text
  L0: write: x := 1;
  L1:  read: $ry := y;
  if $ry != 0 then {
      goto L1
  };
  read: $rx := x;
  read: $ry1 := y;
  read: $rz := z;
  if $rx = 1 && $ry = 0 && $ry1 = 0 && $rz = 3 then {
	L2: nop
  };
   goto L0


process(1)
registers
  $rx = * : [0:3]
  $ry = * : [0:3]
  $rz = * : [0:3]
text
  L0: write: y := 0;
  write: z := 2;
  read: $rx := x;
  read: $ry := y;
  read: $rz := z;
  if $rx = 1 && $ry = 0 && $rz = 3 then {
	L2: nop
  };

   goto L0

process(1)
registers
  $rx = * : [0:3]
  $ry = * : [0:3]
  $rz = * : [0:3]
text
  L0: write: y := 0;
  read: $rx := x;
  read: $ry := y;
  read: $rz := z;
  if $rx = 1 && $ry = 0 && $rz = 3 then {
	L2: nop
  };

   goto L0

