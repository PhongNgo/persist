/*
# x - 0
# y - 1
# z - 2
# T1: x=1; z=3; Rx <-x = 1
# T2: x=1; y=2;
# T3: y=3; z=1
# Error state: Rx=1; z=3; y=3; x=1
#
# Cycles for happended-before relations:
# isu&update(x=1,t1), isu(z=3), Rx=x, isu&update(x=1,t2), isu&update(y=2), isu&update(y=3), isu&update(z=1), update(z=3)
 */

forbidden
  L2 * * * L2 L2;
  * L2 * * L2 L2;
  * * L2 * L2 L2;
  * * * L2 L2 L2
data
  x = 0 : [0:3]
  y = 0 : [0:3]
  z = 0 : [0:3]

process(1)
registers
  $rx = * : [0:3]
  $rx1 = * : [0:3]
  $ry = * : [0:3]
  $rz = * : [0:3]
	
text
  L0: write: x := 1; 
  write: z := 3;
  L1:  read: $rx := x;
  if $rx != 1 then {
      goto L1
  };
  read: $rx1 := x;
  read: $ry := y;
  read: $rz := z;
  if $rx = 1 && $rx1 = 1 && $ry = 3 && $rz = 3 then {
	L2: nop
  };

  goto L0

process(1)
registers
  $rx = * : [0:3]
  $rx1 = * : [0:3]
  $ry = * : [0:3]
  $rz = * : [0:3]
	
text
  L0: write: x := 1; 
  write: z := 3;
  L1:  read: $rx := x;
  if $rx != 1 then {
      goto L1
  };
  read: $rx1 := x;
  read: $ry := y;
  read: $rz := z;
  if $rx = 1 && $rx1 = 1 && $ry = 3 && $rz = 3 then {
	L2: nop
  };

  goto L0


process(1)
registers
  $rx = * : [0:3]
  $rx1 = * : [0:3]
  $ry = * : [0:3]
  $rz = * : [0:3]
	
text
  L0: write: x := 1; 
  write: z := 3;
  L1:  read: $rx := x;
  if $rx != 1 then {
      goto L1
  };
  read: $rx1 := x;
  read: $ry := y;
  read: $rz := z;
  if $rx = 1 && $rx1 = 1 && $ry = 3 && $rz = 3 then {
	L2: nop
  };

  goto L0

process(1)
registers
  $rx = * : [0:3]
  $rx1 = * : [0:3]
  $ry = * : [0:3]
  $rz = * : [0:3]
	
text
  L0: write: x := 1; 
  write: z := 3;
  L1:  read: $rx := x;
  if $rx != 1 then {
      goto L1
  };
  read: $rx1 := x;
  read: $ry := y;
  read: $rz := z;
  if $rx = 1 && $rx1 = 1 && $ry = 3 && $rz = 3 then {
	L2: nop
  };

  goto L0

process(1)
registers
  $rx = * : [0:3]
  $ry = * : [0:3]
  $rz = * : [0:3]
text
  L0: write: x := 1;
  write: y := 2;
  read: $rx := x;
  read: $ry := y;
  read: $rz := z;
  if $rx = 1 && $ry = 3 && $rz = 3 then {
	L2: nop
  };

   goto L0


process(1)
registers
  $rx = * : [0:3]
  $ry = * : [0:3]
  $rz = * : [0:3]
text
  L0: write: y := 3;
  write: z := 1;
  read: $rx := x;
  read: $ry := y;
  read: $rz := z;
  if $rx = 1 && $ry = 3 && $rz = 3 then {
	L2: nop
  };

   goto L0

