/* Problematic code from PostgreSQL

(Code from [Alglave, Kroening, ESOP2013])

#define WORKERS 2
volatile _Bool latch[WORKERS];
volatile _Bool flag[WORKERS];
void worker(int i){
  while(!latch[i]);
  for(;;){
    assert(!latch[i] || flag[i]);
    latch[i] = 0;
    if(flag[i]){
      flag[i] = 0;
      flag[(i+1)%WORKERS] = 1;
      latch[(i+1)%WORKERS] = 1;
    }
    while(!latch[i]);
  }
}
*/

forbidden
  BAD * ;
  * BAD

macro p(l0,f0)
process
data
  latch = l0 : [0:1]
  flag = f0 : [0:1]
registers
  $l = 0 : [0:1]
  $f = 0 : [0:1]
text
  read: latch[my] = 1;
L0:
  read: $l := latch[my];
  read: $f := flag[my];
  if $l = 1 && $f = 0 then goto BAD;
  write: latch[my] := 0;
  either{
    read: flag[my] = 1;
    write: flag[my] := 0;
    write: flag[0] := 1;
    write: latch[0] := 1
  or
    read: flag[my] = 0
  };
  read: latch[my] = 1;
  goto L0;
  BAD: nop
endmacro

p(0,0)
p(0,0)
