
Trencher 1

Persist 1

[root@localhost build]# ./PERSIST -b -f 2 ../examples/postgresql/parker/parker.txt
Computed fences for enforcing persistence (1 total): (parker,q0)
*********************************************
 Thread number: 3
 State number: 47
 Transition number: 49
 PotentialAttackNum: 2
 InfeasibleAttackNum: 0
 InfeasibleAttackNum: 0
 FeasibleAttackNum: 0
 Fence number: 1
 SpinTime in miliseconds: 72
 CompilerTime in miliseconds: 1299
 VerifierTime in miliseconds: 67
 SeqRealTime in miliseconds: 1438
 RealTime in milisecond: 1482
*********************************************

[root@localhost build]# ./trencher -b -f ../examples/postgresql/parker/parker.txt
filename ../examples/postgresql/parker/parker.txt action 1 threadsCount 3 statesCount 47 transitionsCount 49 potentialAttacksCount 54 infeasibleAttacksCount1 46 infeasibleAttacksCount2 6 feasibleAttacksCount 2 fencesCount 1 spinTime 254 compilerTime 5332 verifierTime 324 cpuTime 20 realTime 3736


Memorax

Ask Carl: can not reach

[root@localhost build]# memorax fencins -a sb ../examples/postgresql/parker/parker.rmm
Found 1 synchronization set:
Totally 0 unique synchronizations:
Synchronization sets:
#0: {}
Total time to insert fences: 0.2 s


Musketeer 3


[root@localhost build]# ./goto-cc -o ../examples/postgresql/parker/parker.gb ../examples/postgresql/parker/parker.c
[root@localhost build]# ./musketeer --mm tso ../examples/postgresql/parker/parker.gb
Reading GOTO program from ../examples/postgresql/parker/parker.gb
Adding CPROVER library
Partial Inlining
Function Pointer Removal
Pointer Analysis
Fence detection for tso via critical cycles and ILP
Adding weak memory (TSO) Instrumentation
--------
Temporary variables added
Dependencies analysis enabled
Number of threads detected: 2
Graph with 13 nodes has 1 interesting SCCs
Number of reads: 4
Number of writes: 7
Number of wse: 8
Number of rfe/fre: 10
Number of goto-instructions: 98
Abstract event graph computed

cycles collected: 18 cycles found
i: 127 mat_size: 126
Optimal solution found
minimal cost: 9
5 -> 3 : fence
(between file ../examples/postgresql/parker/parker.c line 91 function park and file ../examples/postgresql/parker/parker.c line 119 function waiting
7 -> 3 : fence
(between file ../examples/postgresql/parker/parker.c line 97 function park and file ../examples/postgresql/parker/parker.c line 119 function waiting
8 -> 3 : fence
(between file ../examples/postgresql/parker/parker.c line 103 function park and file ../examples/postgresql/parker/parker.c line 119 function waiting
