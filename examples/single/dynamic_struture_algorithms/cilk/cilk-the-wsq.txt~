#
# A model of the work-stealing queue from Cilk 5, as presented in
#
# Matteo Frigo, Charles E. Leiserson, and Keith H. Randall. The implementation
# of the cilk-5 multithreaded language. SIGPLAN Not., 33(5):212–223, May 1998.
# 
# This program needs 2 fences to be SC.
#
# Memory layout:
# 0 — H
# 1 — T
# 2 — L

thread worker
initial t00
 
transition	t00	t0	local	limit	10000
transition 	t0 	pop0	noop
transition 	t0 	push0	noop


transition	pop0	pop1	read	T	1
transition	pop1	pop2	write	- T  1	1

transition	pop2	pop3	read	T	1
transition	pop3	pop4	read	H	0
transition	pop4	success	check	<= H T
transition	pop4	pop5	check	> H T

transition	pop5	pop61	read	T	1
transition	pop61	pop6	check	<	T	limit
transition	pop61	t0	check	>=	T	limit

transition	pop6	pop7	write	+ T  1	1

transition	pop7	pop71	lock
transition	pop71	pop72	read	L	2
transition	pop72	pop73	check	==  L 	0
transition	pop73	pop74	write	1	2
transition	pop74	pop8	unlock


transition	pop8	pop9	read	T	1
transition	pop9	pop10	write	- T  1	1

transition	pop10	pop11	read	H	0
transition	pop11	pop111	read	T	1
transition	pop111	pop12	check	<= H T
transition	pop111	pop13	check	> H T

transition	pop12	pop121	lock
transition	pop121	pop122	read	L	2
transition	pop122	pop123	check	==  L	1
transition	pop123	pop124	write	0	2
transition	pop124	success	unlock

transition	pop13	pop141	read	T	1

transition	pop141	pop14	check	<	T	limit
transition	pop141	t0	check	>=	T	limit

transition	pop14	pop15	write	+ T 1	1

transition	pop15	pop151	lock
transition	pop151	pop152	read	L	2
transition	pop152	pop153	check	==  L	1
transition	pop153	pop154	write	0	2
transition	pop154	failure	unlock

transition	push0	push11	read	T	1

transition	push11	push1	check	<	T	limit
transition	push11	t0 	check	>=	T	limit

transition	push1	push2	write	+ T 1	1

transition	push2	t0 	noop
transition	success	t0 	noop
transition	failure	t0 	noop

end


thread steal
initial steal00

transition	steal00	steal0	local	limit	10000

transition	steal0	steal01	lock
transition	steal01	steal02	read	L	2
transition	steal02	steal03	check	==  L 	0
transition	steal03	steal04	write	1	2
transition	steal04	steal1	unlock

transition	steal1	steal21	read	H	0

transition	steal21	steal2	check	<	H	limit
transition	steal21	steal0	check	>=	H	limit

transition	steal2	steal3	write	+ H 1	0

transition	steal3	steal4	read	H	0
transition	steal4	steal5	read	T	1
transition	steal5	steal6	check	<= H T
transition	steal5	steal7	check	> H T

transition	steal6	steal61	lock
transition	steal61	steal62	read	L	2
transition	steal62	steal63	check	==  L	1
transition	steal63	steal64	write	0	2
transition	steal64	success	unlock

transition	steal7	steal8	read	H	0
transition	steal8	steal9	write	- H 1	0

transition	steal9	steal91	lock
transition	steal91	steal92	read	L	2
transition	steal92	steal93	check	==  L	1
transition	steal93	steal94	write	0	2
transition	steal94	failure	unlock

transition	success t0	noop
transition	failure t0	noop

end
