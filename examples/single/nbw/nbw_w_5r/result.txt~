Trencher 0
[phong@localhost build]$ ./trencher -b -f ../examples/postgresql/nbw_w_r/nbw_w_r.txt
filename ../examples/postgresql/nbw_w_r/nbw_w_r.txt action 1 threadsCount 2 statesCount 11 transitionsCount 9 potentialAttacksCount 3 infeasibleAttacksCount1 3 infeasibleAttacksCount2 0 feasibleAttacksCount 0 fencesCount 0 spinTime 0 compilerTime 0 verifierTime 0 cpuTime 0 realTime 0


Persist 0

[phong@localhost build]$ ./PERSIST -b -f 2 ../examples/postgresql/nbw_w_r/nbw_w_r.txt
Computed fences for enforcing persistence (0 total):
*********************************************
 Thread number: 2
 State number: 11
 Transition number: 9
 PotentialAttackNum: 0
 InfeasibleAttackNum: 0
 InfeasibleAttackNum: 0
 FeasibleAttackNum: 0
 Fence number: 0
 SpinTime in miliseconds: 0
 CompilerTime in miliseconds: 0
 VerifierTime in miliseconds: 0
 SeqRealTime in miliseconds: 0
 RealTime in milisecond: 0
*********************************************


Memorax 0

[phong@localhost build]$ memorax fencins -a sb ../examples/postgresql/nbw_w_r/nbw_w_r.rmm
Found 1 synchronization set:
Totally 0 unique synchronizations:
Synchronization sets:
#0: {}
Total time to insert fences: 0.0 s

Musketeer 0

[phong@localhost build]$ ./goto-cc -o ../examples/postgresql/nbw_w_r/nbw_w_r.gb ../examples/postgresql/nbw_w_r/nbw_w_r.c
[phong@localhost build]$ ./musketeer --mm tso ../examples/postgresql/nbw_w_r/nbw_w_r.gb
Reading GOTO program from ../examples/postgresql/nbw_w_r/nbw_w_r.gb
Adding CPROVER library
Partial Inlining
Function Pointer Removal
Pointer Analysis
Fence detection for tso via critical cycles and ILP
Adding weak memory (TSO) Instrumentation
--------
Temporary variables added
Dependencies analysis enabled
Number of threads detected: 2
Graph with 7 nodes has 1 interesting SCCs
Number of reads: 4
Number of writes: 3
Number of wse: 0
Number of rfe/fre: 5
Number of goto-instructions: 44
Abstract event graph computed

cycles collected: 0 cycles found
program safe -- no need to place additional fences



Memorax 0

[phong@localhost build]$ memorax fencins -a sb ../examples/postgresql/nbw-w-wr/nbw_w_wr.rmm
Found 1 synchronization set:
Totally 0 unique synchronizations:
Synchronization sets:
#0: {}
Total time to insert fences: 0.0 s


Musketeer 2

[phong@localhost build]$ ./goto-cc -o ../examples/postgresql/nbw-w-wr/nbw_w_wr.gb ../examples/postgresql/nbw-w-wr/nbw_w_wr.c
[phong@localhost build]$ ./musketeer --mm tso ../examples/postgresql/nbw-w-wr/nbw_w_wr.gb
Reading GOTO program from ../examples/postgresql/nbw-w-wr/nbw_w_wr.gb
Adding CPROVER library
Partial Inlining
Function Pointer Removal
Pointer Analysis
Fence detection for tso via critical cycles and ILP
Adding weak memory (TSO) Instrumentation
--------
Temporary variables added
Dependencies analysis enabled
Number of threads detected: 2
Graph with 11 nodes has 1 interesting SCCs
Number of reads: 5
Number of writes: 6
Number of wse: 5
Number of rfe/fre: 9
Number of goto-instructions: 50
Abstract event graph computed

cycles collected: 2 cycles found
i: 11 mat_size: 10
Optimal solution found
minimal cost: 6
7 -> 8 : fence
(between file ../examples/postgresql/nbw-w-wr/nbw_w_wr.c line 18 function write_reader and file ../examples/postgresql/nbw-w-wr/nbw_w_wr.c line 21 function write_reader
6 -> 8 : fence
(between file ../examples/postgresql/nbw-w-wr/nbw_w_wr.c line 17 function write_reader and file ../examples/postgresql/nbw-w-wr/nbw_w_wr.c line 21 function write_reader

