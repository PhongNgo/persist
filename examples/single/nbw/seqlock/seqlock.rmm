/*
#
# Seqlock algorithm.
#
# Writer:
# while (true) {
#   c++;
#   x1 = data1;
#   y1 = data2;
#   c++;
# }
#
# Reader:
# while (true) {
#  do {
#      do {c0 = c;} while {c0 % 2};
#       data1=x1;
#       data2 = x2;
#  } while { c!= c0}
#  }

*/

forbidden
  * ERROR * *;
  * * ERROR *;
  * * * ERROR

data
  c = * : [0:1000]
  x = * : [0:1]
  y = * : [0:1]

process(1)
registers
  $r0 = * : [0:1000]
text
  L0: read: $r0 := c;
  write: c := $r0 + 1;
  write: x := 1;
  write: y := 1;
  write: c := $r0 + 2;
  goto L0
  
process(1)
registers
  $r0 = * : [0:1000]
  $r1 = * : [0:1]
  $r2 = * : [0:1]
  $r3 = * : [0:1000]
text
L0: read: $r0 := c;
  	$r3 := $r0;
L1:  if $r3 > 1 then {
	$r3 := $r3 - 2;
   	goto L1
     };
     if $r3 = 1 then 
	goto L0
     else {
      read: $r1:= x;
      read: $r2 := y;
      read: $r3 := c;
      
      if $r3 != $r0 then {
        goto L0
      } else {
        L2:  if $r3 > 1 then {
	$r3 := $r3 - 2;
   	goto L2
        };
     	if $r3 = 1 then {
	   ERROR: nop
        }
      }; 
      goto L0
  }
  
process(1)
registers
  $r0 = * : [0:1000]
  $r1 = * : [0:1]
  $r2 = * : [0:1]
  $r3 = * : [0:1000]
text
L0: read: $r0 := c;
  	$r3 := $r0;
L1:  if $r3 > 1 then {
	$r3 := $r3 - 2;
   	goto L1
     };
     if $r3 = 1 then 
	goto L0
     else {
      read: $r1:= x;
      read: $r2 := y;
      read: $r3 := c;
      
      if $r3 != $r0 then {
        goto L0
      } else {
        L2:  if $r3 > 1 then {
	$r3 := $r3 - 2;
   	goto L2
        };
     	if $r3 = 1 then {
	   ERROR: nop
        }
      }; 
      goto L0
  }

process(1)
registers
  $r0 = * : [0:1000]
  $r1 = * : [0:1]
  $r2 = * : [0:1]
  $r3 = * : [0:1000]
text
L0: read: $r0 := c;
  	$r3 := $r0;
L1:  if $r3 > 1 then {
	$r3 := $r3 - 2;
   	goto L1
     };
     if $r3 = 1 then 
	goto L0
     else {
      read: $r1:= x;
      read: $r2 := y;
      read: $r3 := c;
      
      if $r3 != $r0 then {
        goto L0
      } else {
        L2:  if $r3 > 1 then {
	$r3 := $r3 - 2;
   	goto L2
        };
     	if $r3 = 1 then {
	   ERROR: nop
        }
      }; 
      goto L0
  }


